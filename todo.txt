WeeWikiPaint

Minimum Marketable Features:
* marketing home page
- collaborative painting page (very basic)
- wiki-fy the pages
- more complex painting?
- more collaborative features?

User Stories:
* "hello world" server
- "hello world" client (one browser)
- support multiple browsers
- marketing copy

Engineering Tasks:
* Serve a file

To Do on current task:
- decide if it is worth using engineStrict
- figure out how to check for node version during integration using package.json
- clean up current version test in package.json

Future ideas:
- Create 'fail fast' assertion code
- Abstract test framework? (Swap out a different framework to make sure abstraction works)

Notes:
- NodeUnit default reporter has minor display issue on Windows

Fork Notes:
- My package manager has node 0.8.5 installed and I don't want
to install a manually managed node

- looks like the issue w/ nodeunit check marks is probably just an issue with
terminal font in windows, similar result using MS consolas font in linux

- Running npm init, picking v 0.0.16 for episode fork

- npm semver's ~1.2.3 := >=1.2.3 <1.3.0

- update package json: set engine version and some sample scripts.

- sample scripts are some what repeatative but might be useful as project and
  our workflow evolve

- usages: npm test; npm run-script jake; npm run-script integrate

- using engineStrict would cause install to fail similar to current behavior,
  however the npm website has a stern warning about doing this needlessly
  see: https://npmjs.org/doc/json.html
